!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports["lib-resource-path"]=r():e["lib-resource-path"]=r()}("undefined"!=typeof self?self:this,(function(){return(()=>{"use strict";var e={};return(()=>{var r=e;r.Create=function(e,r,t,i){if(!e)throw new Error("The parameter [Resources] is required.");if(!r||!r.length)throw new Error("The parameter [Path] is required.");if(r.length<2)throw new Error("The [Path] parameter contains an invalid value.");if(void 0===t&&(t={}),(i=i||{}).CreatePaths=!!i.CreatePaths&&i.CreatePaths,i.CreatePaths){let e=r.substr(0,1),t=r.split(e);t.shift(),t.pop();let i="";for(let r=0;r<t.length;r++)i+=e+t[r]}return e[r]=JSON.parse(JSON.stringify(t)),e},r.Update=function(e,r,t){if(!e)throw new Error("The parameter [Resources] is required.");if(!r||!r.length)throw new Error("The parameter [Path] is required.");if(r.length<2)throw new Error("The [Path] parameter contains an invalid value.");return void 0===t&&(t={}),e[r]=JSON.parse(JSON.stringify(t)),e},r.Delete=function(e,r){if(!e)throw new Error("The parameter [Resources] is required.");if(!r||!r.length)throw new Error("The parameter [Path] is required.");if(r.length<2)throw new Error("The [Path] parameter contains an invalid value.");let t=Object.keys(e);for(let i=0;i<t.length;i++)t[i].startsWith(r)&&delete e[t[i]];return e},r.Select=function(e,r){if(!e)throw new Error("The parameter [Resources] is required.");let t={parent:"",name:"",info:null,exists:!1,resource:{},children:[]};if(!r||!r.length)return Object.keys(e).forEach((e=>{let r=e.substr(0,1),i=r+e.split(r)[1];t.children.includes(i)||t.children.push(i)})),t;let i=r.substr(0,1),n=r.split(i);for(n.shift();n.length>1;){t.parent+=i+n[0];let r=e[t.parent];r&&Object.keys(r).forEach((e=>t.resource[e]=r[e])),n.shift()}t.name=i+n[0];let s=e[r];return void 0!==s&&(t.info={},t.exists=!0,Object.keys(s).forEach((e=>t.resource[e]=s[e])),Object.keys(s).forEach((e=>t.info[e]=s[e]))),Object.keys(e).forEach((e=>{if(e.startsWith(r)){let n=e.substr(r.length).split(i);if(n.shift(),n.length>0){let e=i+n[0];t.children.includes(e)||t.children.push(e)}}})),t},r.Header=function(e){if(!e)throw new Error("The parameter [Resources] is required.");let r=Object.keys(e);return r.sort(),r},r.Locate=function(e,r){if(!e)throw new Error("The parameter [Resources] is required.");r&&r.length||(r="");let t=[];return Object.keys(e).forEach((e=>{let i=e.substr(0,1);e.split(i).includes(r)&&t.push(e)})),t.sort(),t},r.Copyto=function(e,r,t){if(!e)throw new Error("The parameter [Resources] is required.");if(!r||!r.length)throw new Error("The parameter [Path] is required.");if(r.length<2)throw new Error("The [Path] parameter contains an invalid value.");if(!t||!t.length)throw new Error("The parameter [NewPath] is required.");if(t.length<2)throw new Error("The [NewPath] parameter contains an invalid value.");let i=r.substr(0,1),n=t.substr(0,1),s=t.split(n);return Object.keys(e).forEach((t=>{if(t.startsWith(r)){let a=t.substr(r.length).split(i);a.shift();let o=[...s,...a].join(n),h=e[t];e[o]=JSON.parse(JSON.stringify(h))}})),e},r.Moveto=function(e,r,t){if(!e)throw new Error("The parameter [Resources] is required.");if(!r||!r.length)throw new Error("The parameter [Path] is required.");if(r.length<2)throw new Error("The [Path] parameter contains an invalid value.");if(!t||!t.length)throw new Error("The parameter [NewPath] is required.");if(t.length<2)throw new Error("The [NewPath] parameter contains an invalid value.");let i=r.substr(0,1),n=t.substr(0,1),s=t.split(n);return Object.keys(e).forEach((t=>{if(t.startsWith(r)){let a=t.substr(r.length).split(i);a.shift();let o=[...s,...a].join(n),h=e[t];e[o]=JSON.parse(JSON.stringify(h)),delete e[t]}})),e}})(),e})()}));
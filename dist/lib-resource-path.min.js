!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["lib-resource-path"]=t():e["lib-resource-path"]=t()}("undefined"!=typeof self?self:this,(function(){return(()=>{"use strict";var e={};return(()=>{var t=e;function r(e,t){if(!e)throw new Error("The parameter [Resources] is required.");let r={path:t,parent:"",name:"",info:null,exists:!1,resource:{},children:[]};if(!t||0===t.length)return r.path="",r.name="",Object.keys(e).forEach((e=>{let t=e.substr(0,1),i=t+e.split(t)[1];r.children.includes(i)||r.children.push(i)})),r;let i=t.substr(0,1);if(1===t.length)return r.path="",r.name=t,Object.keys(e).forEach((e=>{let t=e.substr(0,1);if(t===i){let i=t+e.split(t)[1];r.children.includes(i)||r.children.push(i)}})),r;let a=t.split(i);for(a.shift();a.length>1;){r.parent+=i+a[0];let t=e[r.parent];t&&Object.keys(t).forEach((e=>r.resource[e]=t[e])),a.shift()}r.name=i+a[0];let n=e[t];return void 0!==n&&(r.info={},r.exists=!0,Object.keys(n).forEach((e=>r.resource[e]=n[e])),Object.keys(n).forEach((e=>r.info[e]=n[e]))),Object.keys(e).forEach((e=>{if(e.startsWith(t)){let a=e.substr(t.length).split(i);if(a.shift(),a.length>0){let e=i+a[0];r.children.includes(e)||r.children.push(e)}}})),r}function i(e,t){let r=e.find((e=>e.path===t));if(!r)for(let a=0;a<e.length&&(r=i(e[a].items,t),!r);a++);return r}t.Create=function(e,t,r,i){if(!e)throw new Error("The parameter [Resources] is required.");if(!t||!t.length)throw new Error("The parameter [Path] is required.");if(t.length<2)throw new Error("The [Path] parameter contains an invalid value.");if(void 0===r&&(r={}),(i=i||{}).CreatePaths=!!i.CreatePaths&&i.CreatePaths,i.CreatePaths){let e=t.substr(0,1),r=t.split(e);r.shift(),r.pop();let i="";for(let t=0;t<r.length;t++)i+=e+r[t]}return e[t]=JSON.parse(JSON.stringify(r)),e},t.Update=function(e,t,r){if(!e)throw new Error("The parameter [Resources] is required.");if(!t||!t.length)throw new Error("The parameter [Path] is required.");if(t.length<2)throw new Error("The [Path] parameter contains an invalid value.");return void 0===r&&(r={}),e[t]=JSON.parse(JSON.stringify(r)),e},t.Delete=function(e,t){if(!e)throw new Error("The parameter [Resources] is required.");if(!t||!t.length)throw new Error("The parameter [Path] is required.");if(t.length<2)throw new Error("The [Path] parameter contains an invalid value.");let r=Object.keys(e);for(let i=0;i<r.length;i++)r[i].startsWith(t)&&delete e[r[i]];return e},t.Select=r,t.Header=function(e){if(!e)throw new Error("The parameter [Resources] is required.");let t=Object.keys(e);return t.sort(),t},t.Getall=function(e,t){if(!e)throw new Error("The parameter [Resources] is required.");(t=t||{}).item_type=t.item_type?t.item_type:"info",t.list_type=t.list_type?t.list_type:"sparse",t.data_type=t.data_type?t.data_type:"array";let a=Object.keys(e);"full"!==t.list_type&&"tree"!==t.list_type||JSON.parse(JSON.stringify(a)).forEach((e=>{let t=e.substr(0,1),r=e.split(t);r.shift();let i="";r.forEach((e=>{i+=t+e,a.includes(i)||a.push(i)}))})),a.sort();let n=null;return"array"===t.data_type?n=[]:"map"===t.data_type&&(n={}),a.forEach((i=>{let a=null,s=r(e,i);"info"===t.item_type?a={path:s.path,parent:s.parent,name:s.name,info:e[i]||null}:"select"===t.item_type&&(a=s),"array"===t.data_type?n.push(a):"map"===t.data_type&&(n[i]=a)})),"tree"===t.list_type&&("array"===t.data_type?n=function(e){let t=JSON.parse(JSON.stringify(e)),r=[];return t.forEach((e=>{e.items=[],""===e.parent?r.push(e):i(r,e.parent).items.push(e)})),r}(n):"map"===t.data_type&&(n=function(e){let t=JSON.parse(JSON.stringify(e)),r={};return Object.keys(t).forEach((e=>{let i=t[e],a=i.parent.substr(0,1),n=i.parent.split(a);n.shift();let s=r;n.forEach(((e,t)=>{s=s[a+e]})),s[i.name]=i})),r}(n))),n},t.Locate=function(e,t){if(!e)throw new Error("The parameter [Resources] is required.");t&&t.length||(t="");let r=[];return Object.keys(e).forEach((e=>{let i=e.substr(0,1);e.split(i).includes(t)&&r.push(e)})),r.sort(),r},t.Copyto=function(e,t,r){if(!e)throw new Error("The parameter [Resources] is required.");if(!t||!t.length)throw new Error("The parameter [Path] is required.");if(t.length<2)throw new Error("The [Path] parameter contains an invalid value.");if(!r||!r.length)throw new Error("The parameter [NewPath] is required.");if(r.length<2)throw new Error("The [NewPath] parameter contains an invalid value.");let i=t.substr(0,1),a=r.substr(0,1),n=r.split(a);return Object.keys(e).forEach((r=>{if(r.startsWith(t)){let s=r.substr(t.length).split(i);s.shift();let h=[...n,...s].join(a),o=e[r];e[h]=JSON.parse(JSON.stringify(o))}})),e},t.Moveto=function(e,t,r){if(!e)throw new Error("The parameter [Resources] is required.");if(!t||!t.length)throw new Error("The parameter [Path] is required.");if(t.length<2)throw new Error("The [Path] parameter contains an invalid value.");if(!r||!r.length)throw new Error("The parameter [NewPath] is required.");if(r.length<2)throw new Error("The [NewPath] parameter contains an invalid value.");let i=t.substr(0,1),a=r.substr(0,1),n=r.split(a);return Object.keys(e).forEach((r=>{if(r.startsWith(t)){let s=r.substr(t.length).split(i);s.shift();let h=[...n,...s].join(a),o=e[r];e[h]=JSON.parse(JSON.stringify(o)),delete e[r]}})),e}})(),e})()}));